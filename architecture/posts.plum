@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Container(subscriptionsSystem, "Subscriptions system", "Software system")
ContainerQueue(subscriptionsQueue, "Subscriptions queue", "Kafka", "Transfers subscriptions from Subscriptions System")

Person(user, "User")
Container(loadBalancer, "Load Balancer", "Nginx", "Uses round robin")

System_Boundary(postsSystem, "Posts system") {
    Container(postsService, "Posts Service", "Go", "Handles CRUD Posts requests", $tags="webApp")
    Container(feedService, "Feed Service", "Go", "Handles user's subscription feed requests", $tags="webApp")
    ContainerDb(postsDatabase, "Posts database", "PostgreSQL", "Posts",  $tags="db")
    ContainerDb(feedCache, "Feed cache", "Redis", "Prepared feeds",  $tags="db")
}
Container(reactionsSystem, "Reactions system", "Software system")
ContainerQueue(reactionsQueue, "Reactions queue", "Kafka", "Transfers reactions from Reactions System")
Container(mediaSystem, "Media system", "Software system")
ContainerQueue(postsQueue, "Posts queue", "Kafka", "Transfers posts to Media System")

Rel(user, loadBalancer, "CRUD posts, get user's feed", "REST")
Rel(loadBalancer, postsService, "CRUD posts", "REST")
Rel(loadBalancer, feedService, "Get user's feed", "REST")

Rel(postsService, postsDatabase, "Stores posts")
Rel(feedService, feedCache, "Prepare and get feeds")
Rel(reactionsSystem, reactionsQueue, "Produce reactions")
Rel(reactionsQueue, postsService, "Consume reactions")
Rel(subscriptionsSystem, subscriptionsQueue, "Produce subscriptions")
Rel(subscriptionsQueue, feedService, "Consume subscriptions")
Rel(postsService, postsQueue, "Produce posts")
Rel(postsQueue, mediaSystem, "Consume posts")
Rel(postsQueue, feedService, "Consume posts")
@enduml